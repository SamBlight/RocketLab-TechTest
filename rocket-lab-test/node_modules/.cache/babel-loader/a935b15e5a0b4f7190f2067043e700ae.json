{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel\\\\Documents\\\\GitHub\\\\RocketLab\\\\rocket-lab-test\\\\src\\\\TodoList.js\";\nimport React, { Component } from \"react\";\nimport TodoItems from \"./TodoItems\";\nimport \"./TodoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n    this.itemCount = 0;\n    this.completedCount = 0;\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.completeItem = this.completeItem.bind(this);\n    this.increasePriorityItem = this.increasePriorityItem.bind(this);\n    this.decreasePriorityItem = this.decreasePriorityItem.bind(this);\n  }\n\n  addItem(e) {\n    if (this._inputElement.value !== \"\") {\n      const newItem = {\n        text: this._inputElement.value,\n        key: Math.random(),\n        priority: \"medium\",\n        completed: false\n      };\n      this.setState(prevState => {\n        return {\n          items: prevState.items.concat(newItem)\n        };\n      });\n      this.itemCount++;\n      this._inputElement.value = \"\";\n    }\n\n    console.log(this.state.items);\n    e.preventDefault();\n  }\n\n  deleteItem(key) {\n    let deleteCount = false;\n    const filteredItems = this.state.items.filter(function (item) {\n      if (item.completed === true && item.key === key) {\n        deleteCount = true;\n      }\n\n      return item.key !== key;\n    });\n\n    if (deleteCount) {\n      this.completedCount--;\n    }\n\n    this.itemCount--;\n    this.setState({\n      items: filteredItems\n    });\n  }\n\n  completeItem(key) {\n    let totalCompleted = 0;\n    const filteredItems = this.state.items.filter(function (item) {\n      if (item.key === key) {\n        item.completed = !item.completed;\n      }\n\n      if (item.completed === true) {\n        totalCompleted++;\n      }\n\n      return item;\n    });\n    this.completedCount = totalCompleted;\n    this.setState({\n      items: filteredItems\n    });\n  }\n\n  increasePriorityItem(key) {\n    const filteredItems = this.state.items.filter(function (item) {\n      if (item.key === key) {\n        if (item.priority === \"high\") {\n          console.log(\"high match\");\n          return item;\n        } else if (item.priority === \"medium\") {\n          console.log(\"medium match\");\n          item.priority = \"high\";\n          return item;\n        } else if (item.priority === \"low\") {\n          console.log(\"low match\");\n          item.priority = \"medium\";\n          return item;\n        }\n      }\n\n      return item;\n    });\n    this.setState({\n      items: filteredItems\n    });\n  }\n\n  decreasePriorityItem(key) {\n    const filteredItems = this.state.items.filter(function (item) {\n      if (item.key === key) {\n        if (item.priority === \"high\") {\n          console.log(\"high match\");\n          item.priority = \"medium\";\n          return item;\n        } else if (item.priority === \"medium\") {\n          console.log(\"medium match\");\n          item.priority = \"low\";\n          return item;\n        } else if (item.priority === \"low\") {\n          console.log(\"low match\");\n          return item;\n        }\n      }\n\n      return item;\n    });\n    this.setState({\n      items: filteredItems\n    });\n  }\n\n  sortTasks(type) {\n    if (type === \"priority\") {\n      const priorityOrder = [\"high\", \"medium\", \"low\"];\n      const sortedItems = this.state.items.sort((a, b) => priorityOrder.indexOf(a.priority) - priorityOrder.indexOf(b.priority));\n      this.setState({\n        items: sortedItems\n      });\n    } else if (type === \"name\") {\n      console.log(\"sort Name\");\n      const sortedItems = this.state.items.sort((a, b) => {\n        const textA = a.text;\n        const textB = b.text;\n\n        if (textA < textB) {\n          return -1;\n        }\n\n        if (textA > textB) {\n          return 1;\n        }\n\n        return 0;\n      });\n      this.setState({\n        items: sortedItems\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoListMain\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: `Items Completed / Items Count`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: ` ${this.completedCount} / ${this.itemCount}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.sortTasks(\"priority\"),\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.sortTasks(\"name\"),\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.addItem,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"enter task\",\n              ref: a => this._inputElement = a\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(TodoItems, {\n          entries: this.state.items,\n          delete: this.deleteItem,\n          complete: this.completeItem,\n          increase: this.increasePriorityItem,\n          decrease: this.decreasePriorityItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/Samuel/Documents/GitHub/RocketLab/rocket-lab-test/src/TodoList.js"],"names":["React","Component","TodoItems","TodoList","constructor","props","state","items","itemCount","completedCount","addItem","bind","deleteItem","completeItem","increasePriorityItem","decreasePriorityItem","e","_inputElement","value","newItem","text","key","Math","random","priority","completed","setState","prevState","concat","console","log","preventDefault","deleteCount","filteredItems","filter","item","totalCompleted","sortTasks","type","priorityOrder","sortedItems","sort","a","b","indexOf","textA","textB","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport TodoItems from \"./TodoItems\";\r\nimport \"./TodoList.css\";\r\n\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: [],\r\n        };\r\n\r\n        this.itemCount = 0;\r\n        this.completedCount = 0;\r\n\r\n        this.addItem = this.addItem.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.completeItem = this.completeItem.bind(this);\r\n        this.increasePriorityItem = this.increasePriorityItem.bind(this);\r\n        this.decreasePriorityItem = this.decreasePriorityItem.bind(this);\r\n    }\r\n\r\n    addItem(e) {\r\n        if (this._inputElement.value !== \"\") {\r\n            const newItem = {\r\n                text: this._inputElement.value,\r\n                key: Math.random(),\r\n                priority: \"medium\",\r\n                completed: false,\r\n            };\r\n\r\n            this.setState((prevState) => {\r\n                return {\r\n                    items: prevState.items.concat(newItem)\r\n                };\r\n            });\r\n            this.itemCount++;\r\n            this._inputElement.value = \"\";\r\n        }\r\n\r\n        console.log(this.state.items);\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    deleteItem(key) {\r\n        let deleteCount = false;\r\n        const filteredItems = this.state.items.filter(function (item) {\r\n            if (item.completed === true && item.key === key) {\r\n                deleteCount = true;\r\n            }\r\n            return (item.key !== key);\r\n        });\r\n\r\n        if (deleteCount) {\r\n            this.completedCount--;\r\n        }\r\n        this.itemCount--;\r\n        this.setState({\r\n            items: filteredItems\r\n        });\r\n    }\r\n\r\n    completeItem(key) {\r\n        let totalCompleted = 0;\r\n        const filteredItems = this.state.items.filter(function (item) {\r\n            if (item.key === key) {\r\n                item.completed = !item.completed;\r\n            }\r\n            if (item.completed === true) {\r\n                totalCompleted++;\r\n            }\r\n            return (item);\r\n        });\r\n\r\n        this.completedCount = totalCompleted;\r\n        this.setState({\r\n            items: filteredItems\r\n        });\r\n    }\r\n\r\n    increasePriorityItem(key) {\r\n        const filteredItems = this.state.items.filter(function (item) {\r\n            if (item.key === key) {\r\n                if (item.priority === \"high\") {\r\n                    console.log(\"high match\");\r\n                    return item;\r\n                } else if (item.priority === \"medium\") {\r\n                    console.log(\"medium match\");\r\n                    item.priority = \"high\";\r\n                    return item;\r\n                } else if (item.priority === \"low\") {\r\n                    console.log(\"low match\");\r\n                    item.priority = \"medium\";\r\n                    return item;\r\n                }\r\n            }\r\n            return (item);\r\n        });\r\n\r\n        this.setState({\r\n            items: filteredItems\r\n        });\r\n    }\r\n\r\n    decreasePriorityItem(key) {\r\n        const filteredItems = this.state.items.filter(function (item) {\r\n            if (item.key === key) {\r\n                if (item.priority === \"high\") {\r\n                    console.log(\"high match\");\r\n                    item.priority = \"medium\";\r\n                    return item;\r\n                } else if (item.priority === \"medium\") {\r\n                    console.log(\"medium match\");\r\n                    item.priority = \"low\";\r\n                    return item;\r\n                } else if (item.priority === \"low\") {\r\n                    console.log(\"low match\");\r\n                    return item;\r\n                }\r\n            }\r\n            return (item);\r\n        });\r\n\r\n        this.setState({\r\n            items: filteredItems\r\n        });\r\n    }\r\n\r\n    sortTasks(type) {\r\n        if (type === \"priority\") {\r\n            const priorityOrder = [\"high\", \"medium\", \"low\"];\r\n            const sortedItems = this.state.items.sort((a, b) => priorityOrder.indexOf(a.priority) - priorityOrder.indexOf(b.priority));\r\n\r\n            this.setState({\r\n                items: sortedItems\r\n            });\r\n\r\n        } else if (type === \"name\") {\r\n            console.log(\"sort Name\");\r\n            const sortedItems = this.state.items.sort( (a, b) => {\r\n                const textA = a.text;\r\n                const textB = b.text;\r\n                if (textA < textB) {\r\n                    return -1;\r\n                }\r\n                if (textA > textB) {\r\n                    return 1;\r\n                }\r\n\r\n                return 0;\r\n            })\r\n\r\n            this.setState({\r\n                items: sortedItems\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"todoListMain\">\r\n                <div className=\"header\">\r\n                    <section>\r\n                        <h2>{`Items Completed / Items Count`}</h2>\r\n                    </section>\r\n                    <section>\r\n                        <h2>{` ${this.completedCount} / ${this.itemCount}`}</h2>\r\n                    </section>\r\n                    <section>\r\n                        <button onClick={() => this.sortTasks(\"priority\")}>Priority</button>\r\n                        <button onClick={() => this.sortTasks(\"name\")}>Name</button>\r\n                    </section>\r\n                    <section>\r\n                        <form onSubmit={this.addItem}>\r\n                            <input placeholder=\"enter task\" ref={(a) => this._inputElement = a}>\r\n                            </input>\r\n                            <button type=\"submit\">add</button>\r\n                        </form>\r\n                    </section>\r\n                </div>\r\n                <section>\r\n                <TodoItems entries={this.state.items} delete={this.deleteItem} complete={this.completeItem}\r\n                           increase={this.increasePriorityItem} decrease={this.decreasePriorityItem}/>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}